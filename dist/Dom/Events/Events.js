function callCbs(t){var e=this.o[t.type],s=Object.values(e.items);for(let e=0;e<s.length;e++)s[e](t)}var Events=class{constructor(){this.id=-1,this.o={wheel:{items:{},o:!1},keydown:{items:{},o:!1},resize:{items:{},o:!1},mousedown:{items:{},o:!1},mouseleave:{items:{},o:!1},mousemove:{items:{},o:!1}}}subAdd(e,t){if(e&&t)return++this.id,(e=this.o[e]).items[this.id]=t,console.log(e),e.fired||this.fire(),this.id;console.warn("You need to event type & id")}subRemove(e,t){t&&e?(e=this.o[e]).items[t]&&delete e.items[t]:console.warn("You need to event type & id")}add(e,t,s,i=!1){e.addEventListener(t,s,i)}remove(e,t,s){e.removeEventListener(t,s)}changeO(e,t=!1){e=this.o[e];e.o="p"===t?{passive:!1}:t}fire(){var t=Object.entries(this.o);for(let e=0;e<t.length;e++){var s=t[e];Object.values(t[e][1].items).length&&!s[1].fired&&(s[1].fired=!0,window.addEventListener(s[0],callCbs.bind(this),s[1].o))}}},Events_default=new Events;export{Events_default as default};